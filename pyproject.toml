[project]
name = "payment-service"
version = "0.1.0"
description = "Production-ready payment processing microservice"
authors = [{name = "Payment Service Team", email = "team@example.com"}]
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "psycopg2-binary>=2.9.9",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "ddtrace>=2.5.0",
    "kafka-python>=2.0.2",
    "cryptography>=41.0.7",
    "httpx>=0.25.2",
    "tenacity>=8.2.3",
    "pydantic-settings>=2.9.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.2",
    "faker>=20.1.0",
    "black>=23.11.0",
    "ruff>=0.1.6",
    "mypy>=1.7.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/payment_service"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.black]
line-length = 100
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=src --cov-report=term-missing"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "faker>=37.4.0",
    "httpx>=0.28.1",
    "locust>=2.37.10",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
]
